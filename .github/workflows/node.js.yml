# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "main" ]
    paths:
     -  'package.json'
    
     
    
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Check out my other private repo
      uses: actions/checkout@v3
      with: 
          path: 'main'
      
    - name: Check out my other private repo
      uses: actions/checkout@v3
      with:
          repository: anuteresa/react_components
          token: ${{ secrets.my_pat }}
          path: 'components'
          
   
    
          
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: './main'
    - name: Check if version has been updated
      
      id: check
    
      uses: EndBug/version-check@v1
      with:
         diff-search: true
         file-name: package.json
         token: ${{ secrets.my_pat}}
         file-url: '::before'
         assume-same-version: old
         static-checking: localIsNew
         

    - name: Log when changed
      if: steps.check.outputs.changed == 'true'
      run: 'echo "Version change found in commit ${{ steps.check.outputs.commit }}! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'
    - name: Install and Build
      if: steps.check.outputs.changed == 'true'  
      run: |
          yarn
          yarn build
          ls
          cat package.json
          cd build
          ls
          yarn test


