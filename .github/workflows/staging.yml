
# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:

 
    
    
     
  pull_request: 


   branches: [ "main" ]
   paths:
     - 'package.json'

jobs:
  run-build:
    runs-on: ubuntu-latest
    
# Define different .env variables    
    strategy:
      matrix:
       include:


    steps:
# Check-out 'master' repository to our action   
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
        ref: main
        
# Installation of node         
    - uses: actions/setup-node@v3
      with:
        node-version: '12.x'
        
# Installation of all dependencies 
    - name: Install
      run: |
          yarn

         
# creating .env file within our action and build our source code
    - name: Create env file and build
      run: |
          touch .env
          echo REACT_APP_API_URL=${{ matrix.REACT_APP_API_URL }} >> .env
          
          cat .env
          yarn build
          

          
# Retrieves the package version from the package.json file           
    - name: Get current package version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@v1.2.3 
           
           
  notify_started:
    runs-on: ubuntu-latest
    

    steps: 
    
     - uses: MontyD/package-json-updated-action@1.0.1

       id: version-updated
       with:
        path: package.json
       env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     - name: started  
       if: steps.version-updated.outputs.has-updated
       run: echo 'started'          
           
  notify:
    runs-on: ubuntu-latest
    
    if: failure() 
    needs: [run-build]
    steps:         
    - name: Post to a Slack channel
      if: ${{needs.run-build-if-needed.outputs.output1}}
      
   
      run: echo 'failure'
      
  notify_sucess :  
    runs-on: ubuntu-latest
    
    if: success()
    needs: [run-build]
    steps: 
    - name: Post 
      if: ${{needs.run-build-if-needed.outputs.output1}}
      
   
      run: echo 'sucess'
  
      
      
     
      
      
      

           
    
           
   


          
          
    

   
        
    


 
    
 
