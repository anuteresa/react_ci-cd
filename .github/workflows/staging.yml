
# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:

 
    
    
     
  push: 


   branches: [ "main" ]
   paths:
     - 'package.json'

jobs:
  run-build-if-needed:
    runs-on: ubuntu-latest
    strategy:
      matrix:

       include:
           - REACT_APP_API_URL: 'test'
             REACT_APP_WEBSITE_URL: 'staging' 
               
    steps:
    - uses: MontyD/package-json-updated-action@1.0.1

      id: version-updated
      with:
        path: package.json
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/checkout@v3
      if: steps.version-updated.outputs.has-updated
      with:
        fetch-depth: 1
        ref: 'main'
        
    - uses: actions/setup-node@v3
      if: steps.version-updated.outputs.has-updated
      with:
        node-version: '16.x'

 

    - name: Install
      if: steps.version-updated.outputs.has-updated
      run: |
          yarn
          yarn test
      env:
         NODE_AUTH_TOKEN: ${{ secrets.my_pat}}
    - name : Build  
      if: steps.version-updated.outputs.has-updated
      run: |

     
          yarn build
      
          echo "${{ matrix.REACT_APP_API_URL }}" > .env
          echo "${{ matrix.REACT_APP_WEBSITE_URL }}" > .env
           
    
           
   


          
          
    - name: Deploy to Server with se
      if: steps.version-updated.outputs.has-updated 
      uses: easingthemes/ssh-deploy@v2.2.11
      env:
          SSH_PRIVATE_KEY: ${{ secrets.key}}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "build/"
          REMOTE_HOST: ${{ secrets.adddress }}
          REMOTE_USER: ${{ secrets.DEPLOY_USER}}
          TARGET: ${{ secrets.path }}     

   
        
    


 
    
 
